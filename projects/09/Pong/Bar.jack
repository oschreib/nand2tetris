/**
 * Implements a graphic square. A graphic square has a screen location
 * and a size. It also has methods for drawing, erasing, moving on the 
 * screen, and changing its size.
 */
class Bar {

    // Location on the screen
    field int x, y;
	// Size of the bar
	field int width, height;

    /** Constructs a new square with a given location and size. */
    constructor Bar new(int Ax, int Ay, int Awidth, int Aheight) {
        let x = Ax;
        let y = Ay;
		
        let width = Awidth;
		let height = Aheight;

        do draw();
        return this;
    }
	
	// Getters
	method int x() { return x; }
	method int y() { return y; }
	method int width() { return width; }
	method int height() { return height; }

    /** Deallocates the object's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Draws the square on the screen. */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width, y + height);
        return;
    }

    /** Erases the square from the screen. */
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + width, y + height);
        return;
    }
	
        /** Moves up by 2 pixels. */
    method void moveUp(int step) {
        if (y > 1) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, (y + height) - 1, x + width, y + height);
            let y = y - step;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + width, y + 1);
        }
        return;
    }

    /** Moves down by 2 pixels. */
    method void moveDown(int step) {
        if ((y + height) < 254) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + width, y + 1);
            let y = y + step;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, (y + height) - 1, x + width, y + height);
        }
        return;
    }

    /** Moves left by 2 pixels. */
    method void moveLeft(int step) {
        if (x - step > 1) {
            do Screen.setColor(false);
            do Screen.drawRectangle((x + width) - 1, y, x + width, y + height);
            let x = x - step;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + 1, y + height);
        }
        return;
    }

    /** Moves right by 2 pixels. */
    method void moveRight(int step) {
        if ((x + width + step) < 510) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + 1, y + height);
            let x = x + step;
            do Screen.setColor(true);
            do Screen.drawRectangle((x + width) - 1, y, x + width, y + height);
        }
        return;
    }
}
